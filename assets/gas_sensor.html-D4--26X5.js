import{_ as s,c as a,a as e,o as p}from"./app-_3pAqU92.js";const t="/vp-docs/assets/DFR0127-DzZyDB7g.jpg",o={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[e('<h1 id="模拟烟雾报警器" tabindex="-1"><a class="header-anchor" href="#模拟烟雾报警器"><span>模拟烟雾报警器</span></a></h1><img src="'+t+`" alt="DFR0127" style="height:160px;"><p><strong>功能</strong></p><p><strong>产品参数</strong></p><ul><li>接口: 模拟信号</li><li>电源: 5V</li><li>调节电位器: 顺时针调节大，逆时针调节小</li></ul><p><a href="https://img.dfrobot.com.cn/wikicn/62b2fb5caa613609f271523c/141f3be4a968057149dd76659026b4b0.pdf" target="_blank" rel="noopener noreferrer">数据手册</a></p><h2 id="生成代码" tabindex="-1"><a class="header-anchor" href="#生成代码"><span>生成代码</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">on_p0_analog_change</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> value <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;烟雾强度&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;未检测到烟雾&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>ANALOG<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>on_analog_change<span class="token punctuation">(</span>on_p0_analog_change<span class="token punctuation">,</span>threshold<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const r=s(o,[["render",l]]),u=JSON.parse('{"path":"/sensor/gas_sensor.html","title":"模拟烟雾报警器","lang":"zh-CN","frontmatter":{},"git":{"contributors":[{"name":"bright","username":"bright","email":"flashpf@qq.com","commits":1,"url":"https://github.com/bright"}],"changelog":[{"hash":"6c53570aefbe266dd1d7c05898ba908c95004a14","time":1750054307000,"email":"flashpf@qq.com","author":"bright","message":"fixed bugs."}]},"filePathRelative":"sensor/gas_sensor.md"}');export{r as comp,u as data};
