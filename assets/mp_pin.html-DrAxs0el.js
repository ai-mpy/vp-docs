import{_ as t,c as p,a as e,b as n,d as l,e as a,w as c,r as o,o as u}from"./app-_3pAqU92.js";const r="/vp-docs/assets/mpbit_read_digital-DqtpKRt_.png",d="/vp-docs/assets/mpbit_set_digital-XRSGirG5.png",m="/vp-docs/assets/mpbit_read_analog-CU-83-30.png",k="/vp-docs/assets/mpbit_set_analog-Bl4gYUuf.png",b="/vp-docs/assets/mpbit_set_analog_16-hurrIzGb.png",h="/vp-docs/assets/mpbit_set_duty_percent-g4dPT7SH.png",g="/vp-docs/assets/mpbit_set_pin-C91tnPow.png",v="/vp-docs/assets/mpbit_time_pulse_us-CSVBThCk.png",P="/vp-docs/assets/mpbit_pin_irq-B2J7haqP.png",_="/vp-docs/assets/mpbit_pin_analog_irq-5AAeSFlk.png",y={},x={class:"hint-container tip"};function f(M,s){const i=o("RouteLink");return u(),p("div",null,[s[5]||(s[5]=e('<h1 id="输入-输出" tabindex="-1"><a class="header-anchor" href="#输入-输出"><span>输入/输出</span></a></h1><p>读取数字信号</p><img src="'+r+`" alt="mpbit_read_digital" style="height:40px;"><p><strong>功能</strong>:</p><ul><li>读取指定引脚的数字电平状态(HIGH/LOW)</li><li>适用引脚:P0,P1,P2,P3,P6-P9,P13-P16,P19-P20</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"><span class="token comment"># 初始化数字输入引脚</span></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>IN<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 读取当前电平状态</span></span>
<span class="line">p0<span class="token punctuation">.</span>read_digital<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输出数字信号" tabindex="-1"><a class="header-anchor" href="#输出数字信号"><span>输出数字信号</span></a></h2><img src="`+d+`" alt="mpbit_set_digital" style="height:45px;"><p><strong>功能</strong>:</p><ul><li>设置指定引脚的输出电平</li><li>数字值 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> - 不设置</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> HIGH 高电平</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> LOW 低电平</li></ul></li><li>适用引脚:P0,P1,P2,P3,P6-P9,P13-P16,P19-P20</li></ul><p>生成代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"><span class="token comment"># 初始化数字输出引脚</span></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 设置高电平输出</span></span>
<span class="line">p0<span class="token punctuation">.</span>write_digital<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取模拟信号" tabindex="-1"><a class="header-anchor" href="#读取模拟信号"><span>读取模拟信号</span></a></h2><img src="`+m+`" alt="mpbit_read_analog" style="height:40px;"><p><strong>功能</strong>:</p><ul><li>读取指定引脚<strong>ADC</strong>的模拟值范围为(0-4095)</li><li>适用引脚:P0,P1,P2,P3</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>ANALOG<span class="token punctuation">)</span></span>
<span class="line">p0<span class="token punctuation">.</span>read_analog<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置模拟-pwm-值" tabindex="-1"><a class="header-anchor" href="#设置模拟-pwm-值"><span>设置模拟(PWM)值</span></a></h2><img src="`+k+`" alt="mpbit_set_analog" style="height:45px;"><p><strong>功能</strong>:</p><ul><li>设置指定引脚(PWM)的模拟值范围为0-1023</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>PWM<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>write_analog<span class="token punctuation">(</span><span class="token number">1023</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置16位精度-pwm-值" tabindex="-1"><a class="header-anchor" href="#设置16位精度-pwm-值"><span>设置16位精度(PWM)值</span></a></h2><img src="`+b+`" alt="mpbit_set_analog_16" style="height:45px;"><p><strong>功能</strong>:</p><ul><li>设置指定引脚(PWM)16位精度模拟值(0-65535)</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>PWM<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>write_analog_u16<span class="token punctuation">(</span><span class="token number">65535</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置引脚-pwm-占空比" tabindex="-1"><a class="header-anchor" href="#设置引脚-pwm-占空比"><span>设置引脚(PWM)占空比</span></a></h2><img src="`+h+`" alt="mpbit_set_duty_percent" style="height:45px;"><p><strong>功能</strong>:</p><ul><li>设置指定引脚(PWM)占空比(0-100%)</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>PWM<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>set_duty_percent<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置引脚" tabindex="-1"><a class="header-anchor" href="#设置引脚"><span>设置引脚</span></a></h2><img src="`+g+`" alt="mpbit_set_pin" style="height:45px;"><p><strong>功能</strong>:</p><ul><li>模式 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 数字输入</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 数字输出</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 模拟输出</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 开漏输出</li></ul></li><li>上下拉设置 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 无上下拉</li><li>下拉</li><li>上拉</li></ul></li><li>数字值 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> - 不设置</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> HIGH 高电平</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> LOW 低电平</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>开漏输出(PinMode.OUT_DRAIN)是一种特殊的输出模式，其中引脚只能拉低电平（接地）或处于高阻态（悬空），不能主动输出高电平。当需要输出高电平时，需要外接上拉电阻将引脚拉高。这种模式允许多个设备共享同一总线而不会产生冲突，常用于I2C、单线总线等通信协议中。</p></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>PinMode<span class="token punctuation">.</span>IN<span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取引脚电平持续时间" tabindex="-1"><a class="header-anchor" href="#读取引脚电平持续时间"><span>读取引脚电平持续时间</span></a></h2><img src="`+v+`" alt="mpbit_time_pulse_us" style="height:40px;"><p><strong>功能</strong>:</p><ul><li>获取引脚电平持续时间(微秒)</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> machine <span class="token keyword">import</span> time_pulse_us</span>
<span class="line"><span class="token comment"># 高电平持续时间</span></span>
<span class="line">time_pulse_us<span class="token punctuation">(</span>Pin<span class="token punctuation">(</span>Pin<span class="token punctuation">.</span>P0<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1000000</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="当引脚电平上升下降或变化时" tabindex="-1"><a class="header-anchor" href="#当引脚电平上升下降或变化时"><span>当引脚电平上升下降或变化时</span></a></h2><img src="`+P+'" alt="mpbit_pin_irq" style="height:80px;"><p><strong>功能</strong>:</p><ul><li>电平模式 <ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> ↗从低到高</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> ↘从高到低</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> ↗↘改变时</li></ul></li><li><strong>中断回调非阻塞</strong></li><li>可用于按钮传感器等按下,松开事件处理</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li><li>默认防抖时间为50ms</li></ul>',51)),n("div",x,[s[4]||(s[4]=n("p",{class:"hint-container-title"},"提示",-1)),n("p",null,[l(i,{to:"/sensor/digital_vibration_sensor.html"},{default:c(()=>s[0]||(s[0]=[a("数字震动传感器")])),_:1,__:[0]}),s[1]||(s[1]=a(" 可使用下降沿(震动时)触发事件")),s[2]||(s[2]=n("br",null,null,-1)),s[3]||(s[3]=a(" 按钮传感器 可使用上升沿触发事件(当按下时)"))])]),s[6]||(s[6]=e(`<p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">on_p0_rising</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>IN<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>irq<span class="token punctuation">(</span>Pin<span class="token punctuation">.</span>IRQ_RISING<span class="token punctuation">,</span>on_p0_rising<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="当引脚电平模拟值改变时-中断回调非阻塞" tabindex="-1"><a class="header-anchor" href="#当引脚电平模拟值改变时-中断回调非阻塞"><span>当引脚电平模拟值改变时(中断回调非阻塞)</span></a></h2><br><img src="`+_+`" alt="mpbit_pin_analog_irq" style="height:90px;"><p><strong>功能</strong>:</p><ul><li><strong>定时管理器回调(20ms)</strong></li><li>当引脚电平模拟值改变时,阈值40为防抖算法</li><li>可用于旋转电位传感器等的模拟值变化事件处理</li><li>适用引脚:P0,P1,P2,P3</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">on_p0_analog_change</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>ANALOG<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>on_analog_change<span class="token punctuation">(</span>on_p0_analog_change<span class="token punctuation">,</span>threshold<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9))])}const q=t(y,[["render",f]]),N=JSON.parse('{"path":"/blockly/mp_pin.html","title":"输入/输出","lang":"zh-CN","frontmatter":{"title":"输入/输出","author":"bright"},"git":{"contributors":[{"name":"bright","username":"bright","email":"flashpf@qq.com","commits":3,"url":"https://github.com/bright"}],"changelog":[{"hash":"6c53570aefbe266dd1d7c05898ba908c95004a14","time":1750054307000,"email":"flashpf@qq.com","author":"bright","message":"fixed bugs."},{"hash":"d6cb535a7f89fa1c71ad1735496a46cd1cef2da3","time":1749657282000,"email":"flashpf@qq.com","author":"bright","message":"fixed bugs."},{"hash":"4c0996dd67438a92a46ebf690a9f4242e881534a","time":1749634779000,"email":"flashpf@qq.com","author":"bright","message":"调整标题字体大小，使其更小更符合VuePress规范"}]},"filePathRelative":"blockly/mp_pin.md"}');export{q as comp,N as data};
