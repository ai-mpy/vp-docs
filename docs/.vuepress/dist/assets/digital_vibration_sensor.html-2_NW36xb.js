import{_ as s,c as a,e,o as p}from"./app-2FcLHRfP.js";const i={};function l(t,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="数字震动传感器" tabindex="-1"><a class="header-anchor" href="#数字震动传感器"><span>数字震动传感器</span></a></h1><p>数字震动传感器是一种能够检测物体震动或倾斜的传感器。当传感器检测到震动时，会输出数字信号。</p><h2 id="接线方式" tabindex="-1"><a class="header-anchor" href="#接线方式"><span>接线方式</span></a></h2><p>将数字震动传感器连接到开发板上：</p><ul><li>VCC 连接到 3.3V 或 5V（根据传感器型号）</li><li>GND 连接到 GND</li><li>DO 连接到数字引脚（例如 D2）</li></ul><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> machine <span class="token keyword">import</span> Pin</span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 初始化数字震动传感器，连接到GPIO2</span></span>
<span class="line">vibration_sensor <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> Pin<span class="token punctuation">.</span>IN<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 初始化LED指示灯</span></span>
<span class="line">led <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> Pin<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">handle_vibration</span><span class="token punctuation">(</span>pin<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 检测到震动，点亮LED</span></span>
<span class="line">    led<span class="token punctuation">.</span>value<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;检测到震动！&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    led<span class="token punctuation">.</span>value<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置中断处理函数</span></span>
<span class="line">vibration_sensor<span class="token punctuation">.</span>irq<span class="token punctuation">(</span>trigger<span class="token operator">=</span>Pin<span class="token punctuation">.</span>IRQ_FALLING<span class="token punctuation">,</span> handler<span class="token operator">=</span>handle_vibration<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 主循环</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 可以在这里添加其他任务</span></span>
<span class="line">    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ol><li>数字震动传感器通常有一个可调节的灵敏度旋钮，可以根据需要调整触发阈值。</li><li>在高振动环境中使用时，可能需要添加去抖动代码，避免频繁触发。</li><li>有些数字震动传感器还提供模拟输出，可以获取更详细的震动强度信息。</li></ol>`,9)]))}const o=s(i,[["render",l]]),r=JSON.parse('{"path":"/sensor/digital_vibration_sensor.html","title":"数字震动传感器","lang":"en-US","frontmatter":{"title":"数字震动传感器","author":"bright"},"git":{"contributors":[{"name":"李明","username":"","email":"flashpf@qq.com","commits":1},{"name":"bright","username":"bright","email":"flashpf@qq.com","commits":1,"url":"https://github.com/bright"}],"changelog":[{"hash":"694c6fc96ca8e42c2e189950eaccc83d156702da","time":1749628052000,"email":"flashpf@qq.com","author":"bright","message":"更新传感器文档，添加作者信息为bright"},{"hash":"554f60ec460047f25aba3a0dd88899c40db60b72","time":1749626289000,"email":"flashpf@qq.com","author":"李明","message":"first commit"}]},"filePathRelative":"sensor/digital_vibration_sensor.md"}');export{o as comp,r as data};
