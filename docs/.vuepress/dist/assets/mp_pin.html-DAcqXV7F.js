import{_ as s,c as a,e as p,o as e}from"./app-2FcLHRfP.js";const i="/vp-docs/assets/mpbit_read_digital-DqtpKRt_.png",l="/vp-docs/assets/mpbit_set_digital-XRSGirG5.png",t="/vp-docs/assets/mpbit_read_analog-CU-83-30.png",c="/vp-docs/assets/mpbit_set_analog-Bl4gYUuf.png",o="/vp-docs/assets/mpbit_time_pulse_us-XyRiSDAf.png",r="/vp-docs/assets/mpbit_pin_irq-DmV_ysKy.png",u="/vp-docs/assets/%E5%85%89%E7%BA%BF%E4%BC%A0%E6%84%9F%E5%99%A82-C7mj0zoA.png",d={};function m(k,n){return e(),a("div",null,n[0]||(n[0]=[p('<h1 id="输入-输出" tabindex="-1"><a class="header-anchor" href="#输入-输出"><span>输入/输出</span></a></h1><h2 id="读取数字信号" tabindex="-1"><a class="header-anchor" href="#读取数字信号"><span>读取数字信号</span></a></h2><br><img src="'+i+`" alt="mpbit_read_digital" style="height:40px;"><p><strong>功能</strong>:</p><ul><li>读取指定引脚的数字电平状态(HIGH/LOW)</li><li>适用引脚:P0, P1, P2, P3, P6-P9, P13-P16, P19-P20</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 初始化数字输入引脚</span></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>IN<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取当前电平状态</span></span>
<span class="line">p0<span class="token punctuation">.</span>read_digital<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输出数字信号" tabindex="-1"><a class="header-anchor" href="#输出数字信号"><span>输出数字信号</span></a></h2><br><img src="`+l+`" alt="mpbit_set_digital" style="height:45px;"><p><strong>功能</strong>:</p><ul><li>设置指定引脚的输出电平</li><li>数字值 为 - 不设置 HIGH-高电平 LOW-低电平</li><li>适用引脚:P0, P1, P2, P3, P6-P9, P13-P16, P19-P20</li></ul><p>生成代码示例：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 初始化数字输出引脚</span></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置高电平输出</span></span>
<span class="line">p0<span class="token punctuation">.</span>write_digital<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取模拟信号" tabindex="-1"><a class="header-anchor" href="#读取模拟信号"><span>读取模拟信号</span></a></h2><br><img src="`+t+`" alt="mpbit_read_analog" style="height:40px;"><p><strong>功能</strong>:</p><ul><li>读取指定引脚(ADC)的模拟值范围为0-4095</li><li>适用引脚:P0, P1, P2, P3</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>ANALOG<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>read_analog<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置模拟-pwm-信号" tabindex="-1"><a class="header-anchor" href="#设置模拟-pwm-信号"><span>设置模拟(PWM)信号</span></a></h2><br><img src="`+c+`" alt="mpbit_set_analog" style="height:40px;"><p><strong>功能</strong>:</p><ul><li>设置指定引脚(PWM)的模拟值范围为0-1023</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>PWM<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>write_analog<span class="token punctuation">(</span><span class="token number">1023</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取引脚电平持续时间" tabindex="-1"><a class="header-anchor" href="#读取引脚电平持续时间"><span>读取引脚电平持续时间</span></a></h2><br><img src="`+o+`" alt="mpbit_time_pulse_us" style="height:40px;"><p><strong>功能</strong>:</p><ul><li>获取引脚电平持续时间(微秒)</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> machine <span class="token keyword">import</span> time_pulse_us</span>
<span class="line"><span class="token comment"># 高电平持续时间</span></span>
<span class="line">time_pulse_us<span class="token punctuation">(</span>Pin<span class="token punctuation">(</span>Pin<span class="token punctuation">.</span>P0<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1000000</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="当引脚电平上升下降或变化时" tabindex="-1"><a class="header-anchor" href="#当引脚电平上升下降或变化时"><span>当引脚电平上升下降或变化时</span></a></h2><br><img src="`+r+`" alt="mpbit_pin_irq" style="height:80px;"><p><strong>功能</strong>:</p><ul><li>当引脚电平上升,下降或变化时(已加防抖算法处理)</li><li>可用于按钮传感器等按下,松开事件处理</li><li>适用引脚:P0,P1,P2,P3,P6,P7,P8,P9,P13,P14,P15,P16,P19,P20</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">on_p0_rising</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>IN<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>irq<span class="token punctuation">(</span>Pin<span class="token punctuation">.</span>IRQ_RISING<span class="token punctuation">,</span>on_p0_rising<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="当引脚电平模拟值改变时" tabindex="-1"><a class="header-anchor" href="#当引脚电平模拟值改变时"><span>当引脚电平模拟值改变时</span></a></h2><br><img src="`+u+`" alt="mpbit_analog_pin_event" style="height:80px;"><p><strong>功能</strong>:</p><ul><li>当引脚电平模拟值改变时,阈值40为防抖算法</li><li>可用于旋转电位传感器等的模拟值变化事件处理</li><li>适用引脚:P0,P1,P2,P3</li></ul><p>生成代码示例:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> mpbit <span class="token keyword">import</span> MPin<span class="token punctuation">,</span>PinMode</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">on_p0_analog_change</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0 <span class="token operator">=</span> MPin<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> PinMode<span class="token punctuation">.</span>ANALOG<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p0<span class="token punctuation">.</span>on_analog_change<span class="token punctuation">(</span>on_p0_analog_change<span class="token punctuation">,</span>threshold<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,50)]))}const b=s(d,[["render",m]]),h=JSON.parse('{"path":"/blockly/mp_pin.html","title":"输入/输出","lang":"en-US","frontmatter":{"title":"输入/输出","author":"bright"},"git":{"contributors":[{"name":"bright","username":"bright","email":"flashpf@qq.com","commits":1,"url":"https://github.com/bright"}],"changelog":[{"hash":"4c0996dd67438a92a46ebf690a9f4242e881534a","time":1749634779000,"email":"flashpf@qq.com","author":"bright","message":"调整标题字体大小，使其更小更符合VuePress规范"}]},"filePathRelative":"blockly/mp_pin.md"}');export{b as comp,h as data};
